-- -----------------------------------------------
-- -----------------------------------------------
-- PLEASE USE THIS COMMANDS ONLY ON COMMANDLINE 
-- (PSQL CLI), DON'T USE ANY GUI EDITOR
--
-- To connect can use postgres user as following instructions:
-- local: 	psql -h localhost -p 5432 -U postgres
-- docker: 	psql -h localhost -p 4523 -U postgres
-- 
-- into postgresql cli can execute this script using: \i /path/to/DDL/Actvidad2.sql
-- Example: 
-- \i /mnt/c/Users/Fabian/Documents/maestria/0-Primer Cuatrimestre/Desarrollo Web Full Stack/Actividad 2/DDL_Database/Actividad2.sql
--
-- To test buscador database works:
-- psql -h localhost -p 4523 -U buscador_userdb -d buscador_database
-- password: @Buscador#123
--
-- To test operador database works:
-- psql -h localhost -p 4523 -U operador_userdb -d operador_database
-- password: @Operador#321
-- -----------------------------------------------
-- -----------------------------------------------

-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
--------- DATABASE PARA BUSCADOR MICROSERVICE ---------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
--SELECT pid, usename, application_name FROM pg_stat_activity WHERE datname = 'operador_database';
--SELECT pg_terminate_backend(SELECT pid FROM pg_stat_activity WHERE datname = 'operador_database' OR datname = 'buscador_database');

\c postgres;

SELECT pg_terminate_backend(pid)
FROM pg_stat_activity
WHERE pid IN (SELECT pg_stat_activity.pid
FROM pg_stat_activity
WHERE pg_stat_activity.datname = 'operador_database' OR pg_stat_activity.datname = 'buscador_database');

-- DROP DEPENDENCES
DROP DATABASE IF EXISTS operador_database;
DROP ROLE IF EXISTS operador_admindb;
DROP ROLE IF EXISTS operador_userdb;
DROP ROLE IF EXISTS operador_readwrite;
DROP DATABASE IF EXISTS buscador_database;
DROP ROLE IF EXISTS buscador_admindb;
DROP ROLE IF EXISTS buscador_userdb;
DROP ROLE IF EXISTS buscador_readwrite;

-- CREATE DATABASE AND SCHEMA
CREATE DATABASE buscador_database;
\c buscador_database;


-- REVOKING PERMISSIONS OF PUBLIC SCHEMA
REVOKE CREATE ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON DATABASE buscador_database FROM PUBLIC;


-- CREATE SCHEMA AND PERMISSIONS
CREATE SCHEMA buscador_schema AUTHORIZATION postgres;


-- buscador_schema.authors definition
CREATE TABLE buscador_schema.authors (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	firstname varchar(255) NULL,
	lastname varchar(255) NULL,
	CONSTRAINT authors_pkey PRIMARY KEY (id)
);
-- DROP TABLE buscador_schema.books;
CREATE TABLE buscador_schema.books (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	gender varchar(255) NULL,
	quantity_available int4 NULL,
	resume varchar(255) NULL,
	stock_quantity int4 NULL,
	title varchar(255) NULL,
	author_id int8 NULL,
	CONSTRAINT books_pkey PRIMARY KEY (id)
);
-- buscador_schema.books foreign keys
ALTER TABLE buscador_schema.books ADD CONSTRAINT fkfjixh2vym2cvfj3ufxj91jem7 FOREIGN KEY (author_id) REFERENCES buscador_schema.authors(id);




-- CREATE DATABASE OWNER USER (MAIN USER)
CREATE USER buscador_admindb WITH ENCRYPTED PASSWORD '@Buscador#_123!';


-- GRANT PERMISSIONS DB
GRANT ALL PRIVILEGES ON DATABASE buscador_database TO buscador_admindb;
ALTER DATABASE buscador_database OWNER TO buscador_admindb;

GRANT ALL ON SCHEMA buscador_schema TO postgres;
GRANT USAGE ON SCHEMA buscador_schema TO buscador_admindb;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA buscador_schema TO buscador_admindb;
GRANT ALL ON SCHEMA buscador_schema TO buscador_admindb;

-- CREATE USAGE ROLE
CREATE ROLE buscador_readwrite;
GRANT CONNECT ON DATABASE buscador_database TO buscador_readwrite;
GRANT USAGE ON SCHEMA buscador_schema TO buscador_readwrite;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA buscador_schema TO buscador_readwrite;
ALTER DEFAULT PRIVILEGES IN SCHEMA buscador_schema GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO buscador_readwrite;
GRANT USAGE ON ALL SEQUENCES IN SCHEMA buscador_schema TO buscador_readwrite;
ALTER DEFAULT PRIVILEGES IN SCHEMA buscador_schema GRANT USAGE ON SEQUENCES TO buscador_readwrite;

-- CREATE DATABASE USAGE USER AND SHARE ROLE
CREATE USER buscador_userdb WITH ENCRYPTED PASSWORD '@Buscador#123';
GRANT buscador_readwrite TO buscador_userdb;



-- INSERT DATA
INSERT INTO buscador_schema.authors
(firstname, lastname)
VALUES('Ryan', 'Holiday');
INSERT INTO buscador_schema.books
(gender, quantity_available, resume, stock_quantity, title, author_id)
VALUES('Personal Superation', 10, 'Book about the ego and stoicism', 20, 'The ego is the enemy', 1);
INSERT INTO buscador_schema.books
(gender, quantity_available, resume, stock_quantity, title, author_id)
VALUES('Auto help', 10, 'Book about the life', 20, 'The discipline is the way', 1);

INSERT INTO buscador_schema.authors
(firstname, lastname)
VALUES('Marco', 'Aurelio');
INSERT INTO buscador_schema.books
(gender, quantity_available, resume, stock_quantity, title, author_id)
VALUES('Philosopy, AutoHep', 9, 'Diarium of the better emperator', 30, 'Meditations', 2);

INSERT INTO buscador_schema.authors
(firstname, lastname)
VALUES('Epicteto', 'Epicteto');
INSERT INTO buscador_schema.books
(gender, quantity_available, resume, stock_quantity, title, author_id)
VALUES('Auto help', 25, 'The best book ever written', 50, 'enquiridion', 3);

INSERT INTO buscador_schema.authors
(firstname, lastname)
VALUES('Lucio ', 'Seneca');
INSERT INTO buscador_schema.books
(gender, quantity_available, resume, stock_quantity, title, author_id)
VALUES('Philosopy, AutoHep', 15, 'book about the happiness', 40, 'About the happines', 4);
INSERT INTO buscador_schema.books
(gender, quantity_available, resume, stock_quantity, title, author_id)
VALUES('Philosopy, AutoHep', 5, 'Book aboy the short/much time in the life', 10, 'the brevity of life', 4);

-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
--------- DATABASE PARA OPERADOR MICROSERVICE ---------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------

-- CREATE DATABASE AND SCHEMA
CREATE DATABASE operador_database;
\c operador_database;


-- REVOKING PERMISSIONS OF PUBLIC SCHEMA
REVOKE CREATE ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON DATABASE operador_database FROM PUBLIC;




CREATE SCHEMA operador_schema AUTHORIZATION postgres;

-- operador_schema.clientes definition
CREATE TABLE operador_schema.clientes (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	dni varchar(255) NULL,
	first_name varchar(255) NULL,
	last_name varchar(255) NULL,
	registered_at timestamp NULL,
	CONSTRAINT clientes_pkey PRIMARY KEY (id)
);
-- DROP TABLE operador_schema.prestamos;
CREATE TABLE operador_schema.prestamos (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	devolution bool NOT NULL,
	devolution_at timestamp NULL,
	libro_id int8 NULL,
	prestamo_at timestamp NULL,
	cliente_id int8 NULL,
	CONSTRAINT prestamos_pkey PRIMARY KEY (id)
);
-- operador_schema.prestamos foreign keys
ALTER TABLE operador_schema.prestamos ADD CONSTRAINT fkdrh3balm078ondto47lxuci2a FOREIGN KEY (cliente_id) REFERENCES operador_schema.clientes(id);




-- CREATE DATABASE OWNER USER (MAIN USER)
CREATE USER operador_admindb WITH ENCRYPTED PASSWORD '@Operador#_123!';

-- GRANT PERMISSIONS DB
GRANT ALL PRIVILEGES ON DATABASE operador_database TO operador_admindb;
ALTER DATABASE operador_database OWNER TO operador_admindb;

-- CREATE SCHEMA AND PERMISSIONS
GRANT ALL ON SCHEMA operador_schema TO postgres;
GRANT USAGE ON SCHEMA operador_schema TO operador_admindb;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA operador_schema TO operador_admindb;
GRANT ALL ON SCHEMA operador_schema TO operador_admindb;

-- CREATE USAGE ROLE
CREATE ROLE operador_readwrite;
GRANT CONNECT ON DATABASE operador_database TO operador_readwrite;
GRANT USAGE ON SCHEMA operador_schema TO operador_readwrite;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA operador_schema TO operador_readwrite;
ALTER DEFAULT PRIVILEGES IN SCHEMA operador_schema GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO operador_readwrite;
GRANT USAGE ON ALL SEQUENCES IN SCHEMA operador_schema TO operador_readwrite;
ALTER DEFAULT PRIVILEGES IN SCHEMA operador_schema GRANT USAGE ON SEQUENCES TO operador_readwrite;

-- CREATE DATABASE USAGE USER AND SHARE ROLE
CREATE USER operador_userdb WITH ENCRYPTED PASSWORD '@Operador#123';
GRANT operador_readwrite TO operador_userdb;






-- INSERT DATA
INSERT INTO operador_schema.clientes
(dni, first_name, last_name, registered_at)
values ('1100966453', 'FABIAN', 'MILLAN', now());

INSERT INTO operador_schema.clientes
(dni, first_name, last_name, registered_at)
values ('1095942151', 'JOSE', 'MALAVERA', now());

INSERT INTO operador_schema.prestamos
(devolution, devolution_at, libro_id, prestamo_at, cliente_id)
VALUES(false, null, 1, now(), 1);
INSERT INTO operador_schema.prestamos
(devolution, devolution_at, libro_id, prestamo_at, cliente_id)
VALUES(false, null, 2, now(), 1);
INSERT INTO operador_schema.prestamos
(devolution, devolution_at, libro_id, prestamo_at, cliente_id)
VALUES(false, null, 4, now(), 1);
INSERT INTO operador_schema.prestamos
(devolution, devolution_at, libro_id, prestamo_at, cliente_id)
VALUES(false, null, 1, now(), 2);
INSERT INTO operador_schema.prestamos
(devolution, devolution_at, libro_id, prestamo_at, cliente_id)
VALUES(false, null, 3, now(), 2);
INSERT INTO operador_schema.prestamos
(devolution, devolution_at, libro_id, prestamo_at, cliente_id)
VALUES(false, null, 5, now(), 2);




\c postgres;